class TimeMap(object):

    def __init__(self):
        self.map = {}

    def set(self, key, value, timestamp):
        """
        :type key: str
        :type value: str
        :type timestamp: int
        :rtype: None
        """
        if key in self.map:
            self.map[key].append((timestamp, value))
        else:
            self.map[key] = [(timestamp, value)]
        

    def get(self, key, timestamp):
        """
        :type key: str
        :type timestamp: int
        :rtype: str
        """
        if key not in self.map or timestamp < self.map[key][0][0]:
            return ""
        pairs = self.map[key]
        l = 0
        r = len(pairs)-1
        if len(pairs) == 1:
            return pairs[0][1]
        while l < r:
            m = (l+r)//2
            if pairs[m][0] <= timestamp and timestamp < pairs[m+1][0]:
                return pairs[m][1]
            elif timestamp < pairs[m][0]:
                r = m-1
            else:
                l = m+1
        return pairs[r][1]
        


# Your TimeMap object will be instantiated and called as such:
# obj = TimeMap()
# obj.set(key,value,timestamp)
# param_2 = obj.get(key,timestamp)