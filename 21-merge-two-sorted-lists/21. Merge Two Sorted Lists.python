# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        """
        :type list1: Optional[ListNode]
        :type list2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        h1 = list1
        h2 = list2
        curr = None
        if h1 and h2:
            if h1.val < h2.val:
                curr = h1
                h1 = h1.next
            else:
                curr = h2
                h2 = h2.next
        elif h1:
            curr = h1
            h1 = h1.next
        elif h2:
            curr = h2
            h2 = h2.next
        else:
            return None
        head = curr
        while h1 or h2:
            if h1 and h2:
                if h1.val < h2.val:
                    curr.next = h1
                    h1 = h1.next
                else:
                    curr.next = h2
                    h2 = h2.next
            elif h1:
                curr.next = h1
                h1 = h1.next
            else:
                curr.next = h2
                h2 = h2.next
            curr = curr.next
        return head
